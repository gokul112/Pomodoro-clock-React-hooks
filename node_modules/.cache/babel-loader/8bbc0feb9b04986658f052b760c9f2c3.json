{"ast":null,"code":"import { useState } from 'react';\nexport default (initialState => {\n  const [sessionLengthSec, setsessionLength] = useState(60 * 25);\n  const [breakLengthSec, setbreakLength] = useState(300);\n  return {\n    breakLengthSec,\n    sessionLengthSec,\n    decrementSessionLength: () => {\n      const newLength = sessionLengthSec - 60;\n\n      if (newLength <= 0) {\n        setsessionLength(0);\n      } else {\n        setsessionLength(newLength);\n      }\n    },\n    incrementSessionLength: () => {\n      setsessionLength(sessionLengthSec + 60);\n    },\n    decrementLength: () => {\n      const newLength = breakLengthSec - 60;\n\n      if (newLength <= 0) {\n        setbreakLength(0);\n      } else {\n        setbreakLength(newLength);\n      }\n    },\n    incrementLength: () => {\n      setbreakLength(breakLengthSec + 60);\n    }\n  };\n});","map":{"version":3,"sources":["/Users/graj/projects/pomodoro-clock/pomodoro-clock/src/components/usetoState.js"],"names":["useState","initialState","sessionLengthSec","setsessionLength","breakLengthSec","setbreakLength","decrementSessionLength","newLength","incrementSessionLength","decrementLength","incrementLength"],"mappings":"AAAA,SAAQA,QAAR,QAAuB,OAAvB;AAGA,gBAAgBC,YAAD,IAAkB;AACjC,QAAM,CAACC,gBAAD,EAAkBC,gBAAlB,IAAsCH,QAAQ,CAAC,KAAG,EAAJ,CAApD;AACE,QAAM,CAACI,cAAD,EAAgBC,cAAhB,IAAkCL,QAAQ,CAAC,GAAD,CAAhD;AAGF,SAAM;AACJI,IAAAA,cADI;AAEJF,IAAAA,gBAFI;AAGJI,IAAAA,sBAAsB,EAAG,MAAM;AAC3B,YAAMC,SAAS,GAAGL,gBAAgB,GAAG,EAArC;;AACA,UAAGK,SAAS,IAAE,CAAd,EAAgB;AACZJ,QAAAA,gBAAgB,CAAC,CAAD,CAAhB;AACH,OAFD,MAGI;AACAA,QAAAA,gBAAgB,CAACI,SAAD,CAAhB;AACH;AACJ,KAXG;AAaJC,IAAAA,sBAAsB,EAAG,MAAM;AAC3BL,MAAAA,gBAAgB,CAACD,gBAAgB,GAAG,EAApB,CAAhB;AACH,KAfG;AAkBJO,IAAAA,eAAe,EAAG,MAAM;AACpB,YAAMF,SAAS,GAAGH,cAAc,GAAG,EAAnC;;AACA,UAAGG,SAAS,IAAE,CAAd,EAAgB;AACZF,QAAAA,cAAc,CAAC,CAAD,CAAd;AACH,OAFD,MAGI;AACAA,QAAAA,cAAc,CAACE,SAAD,CAAd;AACH;AACJ,KA1BG;AA4BJG,IAAAA,eAAe,EAAG,MAAM;AACpBL,MAAAA,cAAc,CAACD,cAAc,GAAG,EAAlB,CAAd;AACH;AA9BG,GAAN;AAkCC,CAvCD","sourcesContent":["import {useState} from 'react';\n\n\nexport default (initialState) => {\nconst [sessionLengthSec,setsessionLength] = useState(60*25)\n  const [breakLengthSec,setbreakLength] = useState(300)\n\n\nreturn{\n  breakLengthSec,\n  sessionLengthSec,\n  decrementSessionLength : () => {\n      const newLength = sessionLengthSec - 60;\n      if(newLength<=0){\n          setsessionLength(0)\n      }\n      else{\n          setsessionLength(newLength)\n      }\n  },\n\n  incrementSessionLength : () => {\n      setsessionLength(sessionLengthSec + 60);\n  },\n\n\n  decrementLength : () => {\n      const newLength = breakLengthSec - 60;\n      if(newLength<=0){\n          setbreakLength(0)\n      }\n      else{\n          setbreakLength(newLength)\n      }\n  },\n\n  incrementLength : () => {\n      setbreakLength(breakLengthSec + 60);\n  }\n\n}\n\n}"]},"metadata":{},"sourceType":"module"}