{"ast":null,"code":"var _jsxFileName = \"/Users/graj/projects/pomodoro-clock/pomodoro-clock/src/components/TimeLeft.js\";\nimport React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport momentDurationFormatSetup from \"moment-duration-format\";\nmomentDurationFormatSetup(moment);\n\nconst TimeLeft = ({\n  timeLeft,\n  isStart,\n  currentSession,\n  startTimer,\n  reset\n}) => {\n  const formattedTimeLeft = moment.duration(timeLeft, 's').format('mm:ss', {\n    trim: false\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    id: \"timer-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, currentSession), /*#__PURE__*/React.createElement(\"h2\", {\n    id: \"time-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, formattedTimeLeft), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: isStart ? 'Stop' : 'Start',\n    onClick: startTimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, isStart ? 'Stop' : 'Start'), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"Reset\",\n    onClick: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, \"Reset\"));\n};\n\nexport default TimeLeft;","map":{"version":3,"sources":["/Users/graj/projects/pomodoro-clock/pomodoro-clock/src/components/TimeLeft.js"],"names":["React","useState","useEffect","moment","momentDurationFormatSetup","TimeLeft","timeLeft","isStart","currentSession","startTimer","reset","formattedTimeLeft","duration","format","trim"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,yBAAP,MAAsC,wBAAtC;AACAA,yBAAyB,CAACD,MAAD,CAAzB;;AAGA,MAAME,QAAQ,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAUC,EAAAA,OAAV;AAAkBC,EAAAA,cAAlB;AAAiCC,EAAAA,UAAjC;AAA4CC,EAAAA;AAA5C,CAAD,KAAwD;AAGrE,QAAMC,iBAAiB,GAAGR,MAAM,CAACS,QAAP,CAAgBN,QAAhB,EAA0B,GAA1B,EAA+BO,MAA/B,CAAsC,OAAtC,EAA8C;AAACC,IAAAA,IAAI,EAAC;AAAN,GAA9C,CAA1B;AACA,sBACC;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAG,IAAA,EAAE,EAAC,aAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBN,cAArB,CADH,eAEG;AAAI,IAAA,EAAE,EAAC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBG,iBAApB,CAFH,eAGG;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAEJ,OAAO,GAAG,MAAH,GAAY,OAApD;AAA6D,IAAA,OAAO,EAAEE,UAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmFF,OAAO,GAAG,MAAH,GAAY,OAAtG,CAHH,eAIG;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAG,OAAlC;AAA0C,IAAA,OAAO,EAAEG,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJH,CADD;AAUH,CAdD;;AAeA,eAAeL,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport momentDurationFormatSetup from \"moment-duration-format\";\nmomentDurationFormatSetup(moment);\n\n\nconst TimeLeft = ({timeLeft,isStart,currentSession,startTimer,reset}) => {\n   \n\n    const formattedTimeLeft = moment.duration(timeLeft, 's').format('mm:ss',{trim:false});\n    return(\n     <div className=\"main\">\n        <p id=\"timer-label\">{currentSession}</p>\n        <h2 id=\"time-left\">{formattedTimeLeft}</h2>\n        <button type=\"button\" className={isStart ? 'Stop' : 'Start'} onClick={startTimer}>{isStart ? 'Stop' : 'Start'}</button>\n        <button type=\"button\" className = \"Reset\" onClick={reset}>Reset</button>\n\n    </div>\n    )\n  \n}\nexport default TimeLeft;"]},"metadata":{},"sourceType":"module"}